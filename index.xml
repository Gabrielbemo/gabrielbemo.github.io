<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Meu Blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Meu Blog</description>
    <generator>Hugo -- 0.148.2</generator>
    <language>pt-br</language>
    <lastBuildDate>Mon, 18 Aug 2025 15:14:37 -0300</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>O que é Herança em Java e como usar</title>
      <link>http://localhost:1313/posts/heranca/</link>
      <pubDate>Mon, 18 Aug 2025 15:14:37 -0300</pubDate>
      <guid>http://localhost:1313/posts/heranca/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;herança&lt;/strong&gt; é um dos pilares da &lt;strong&gt;Programação Orientada a Objetos (POO)&lt;/strong&gt; e permite que uma classe (chamada de &lt;strong&gt;classe filha&lt;/strong&gt; ou &lt;strong&gt;subclasse&lt;/strong&gt;) herde atributos e métodos de outra classe (chamada de &lt;strong&gt;classe pai&lt;/strong&gt; ou &lt;strong&gt;superclasse&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Isso significa que podemos &lt;strong&gt;reutilizar código&lt;/strong&gt; já existente, evitando repetição e deixando o programa mais organizado.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;exemplo-prático&#34;&gt;Exemplo prático&lt;/h2&gt;
&lt;p&gt;Vamos criar uma classe &lt;code&gt;Animal&lt;/code&gt; e depois duas classes filhas: &lt;code&gt;Cachorro&lt;/code&gt; e &lt;code&gt;Gato&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Classe pai&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Animal&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String nome;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; idade;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dormir&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(nome &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dormindo&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Classe derivada&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Cachorro&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; Animal {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;latir&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(nome &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Au Au&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Outra subclasse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Gato&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; Animal {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;miar&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(nome &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Miau&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Principais Metodos Http</title>
      <link>http://localhost:1313/posts/principais-metodos-http/</link>
      <pubDate>Sun, 10 Aug 2025 04:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/principais-metodos-http/</guid>
      <description>&lt;p&gt;Métodos HTTPS são ações usadas para indicar o tipo de operação que um cliente deseja realizar em um recurso da web, como buscar, enviar ou modificar dados. Veja os métodos mais comuns:&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;get&#34;&gt;GET&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Utilizado para &lt;strong&gt;recuperar dados&lt;/strong&gt; de um servidor.&lt;/li&gt;
&lt;li&gt;Não deve modificar o estado do servidor.&lt;/li&gt;
&lt;li&gt;Exemplo: pegar informações de um usuário.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;post&#34;&gt;POST&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Usado para &lt;strong&gt;enviar dados&lt;/strong&gt; ao servidor, por exemplo, para criar um novo recurso.&lt;/li&gt;
&lt;li&gt;Pode modificar o estado do servidor.&lt;/li&gt;
&lt;li&gt;Exemplo: enviar dados de um formulário.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;put&#34;&gt;PUT&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Serve para &lt;strong&gt;atualizar um recurso&lt;/strong&gt; existente ou criar se não existir.&lt;/li&gt;
&lt;li&gt;Envia a representação completa do recurso.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;delete&#34;&gt;DELETE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Remove o recurso especificado no servidor.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;patch&#34;&gt;PATCH&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Atualiza parcialmente um recurso, enviando apenas os dados que mudaram.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
  </channel>
</rss>
